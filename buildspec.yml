version: 0.2

env:
  variables:
    LambdaFunctionName: linear-equation_solver_demo
    LambdaFunctionAlias: dev

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password
          --region $AWS_DEFAULT_REGION | docker login --username AWS
          --password-stdin
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/equation_solver

  build:
    on-failure: ABORT
    commands:
      - echo Build started on `date`
      
      - echo Building the Docker image and unit tests at the same time...
      - docker build  -t equation_solver . --target reporter -o ./reports
      
      - echo Building the Docker image that will be pushed to ECR...
      - docker build  -t equation_solver . --target production
      - docker tag equation_solver 
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/equation_solver
  
  post_build:
    on-failure: ABORT
    commands:
    - echo Build completed on `date`
    
    - echo Pushing the Docker image to ECR...
    - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/equation_solver
    
    - python create_appspec.py $LambdaFunctionName $LambdaFunctionAlias 
        "AppSpec.yaml" 
        $AWS_ACCOUNT_ID 
        $AWS_DEFAULT_REGION


reports:
  UnitTests:
    files: #Store all of the files
      - "**/*"
    base-directory: 'reports' # Location of the reports


artifacts:
  files:
    - AppSpec.yaml
  name: EquationSolverTestReports
  discard-paths: no
  base-directory: "./"
  s3-prefix: portfolio-cloudformation-templates/TestReports
  secondary-artifacts:
    AppSpecFile:
      files:
        - AppSpec.yaml
      name: AppSpecFile
      discard-paths: no
      base-directory: "./"
    TestReports:
      files:
        - code_coverage.zip
        - unit_tests.xml
      name: TestReports
      discard-paths: no
      base-directory: "./reports"


